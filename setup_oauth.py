#!/usr/bin/env python3
"""
OAuth Setup Script for Truify.AI
This script helps you set up Google OAuth credentials for the application.
"""

import os
import sys

def create_env_file():
    """Create a .env file with OAuth configuration"""
    
    print("🔧 Truify.AI OAuth Setup")
    print("=" * 50)
    print()
    
    # Check if .env already exists
    if os.path.exists('.env'):
        print("⚠️  .env file already exists!")
        response = input("Do you want to overwrite it? (y/N): ")
        if response.lower() != 'y':
            print("Setup cancelled.")
            return
    
    print("Please enter your Google OAuth credentials:")
    print()
    
    # Get credentials from user
    client_id = input("Google OAuth Client ID: ").strip()
    client_secret = input("Google OAuth Client Secret: ").strip()
    redirect_uri = input("Redirect URI (default: http://localhost:8501): ").strip()
    
    if not redirect_uri:
        redirect_uri = "http://localhost:8501"
    
    # Validate inputs
    if not client_id or client_id == "your-google-client-id-here":
        print("❌ Invalid Client ID. Please provide a valid Google OAuth Client ID.")
        return
    
    if not client_secret or client_secret == "your-google-client-secret-here":
        print("❌ Invalid Client Secret. Please provide a valid Google OAuth Client Secret.")
        return
    
    # Create .env file
    env_content = f"""# Google OAuth Configuration
# Generated by setup_oauth.py

GOOGLE_CLIENT_ID={client_id}
GOOGLE_CLIENT_SECRET={client_secret}
GOOGLE_REDIRECT_URI={redirect_uri}
"""
    
    try:
        with open('.env', 'w') as f:
            f.write(env_content)
        
        print()
        print("✅ .env file created successfully!")
        print()
        print("Next steps:")
        print("1. Make sure your Google Cloud Console project is set up correctly")
        print("2. Verify the redirect URI matches your Google OAuth configuration")
        print("3. Restart the Streamlit application")
        print("4. Try logging in again")
        print()
        print("For detailed setup instructions, see GOOGLE_OAUTH_SETUP.md")
        
    except Exception as e:
        print(f"❌ Error creating .env file: {e}")

def check_setup():
    """Check if OAuth is properly configured"""
    print("🔍 Checking OAuth Configuration")
    print("=" * 40)
    print()
    
    # Check if .env exists
    if not os.path.exists('.env'):
        print("❌ .env file not found!")
        print("Run this script to create it: python setup_oauth.py")
        return False
    
    # Load environment variables
    try:
        from dotenv import load_dotenv
        load_dotenv()
    except ImportError:
        print("⚠️  python-dotenv not installed. Install it with: pip install python-dotenv")
        return False
    
    # Check credentials
    client_id = os.getenv('GOOGLE_CLIENT_ID')
    client_secret = os.getenv('GOOGLE_CLIENT_SECRET')
    redirect_uri = os.getenv('GOOGLE_REDIRECT_URI')
    
    print(f"Client ID: {'✅ Set' if client_id and client_id != 'your-google-client-id-here' else '❌ Not set or invalid'}")
    print(f"Client Secret: {'✅ Set' if client_secret and client_secret != 'your-google-client-secret-here' else '❌ Not set or invalid'}")
    print(f"Redirect URI: {redirect_uri or '❌ Not set'}")
    
    if (client_id and client_id != 'your-google-client-id-here' and 
        client_secret and client_secret != 'your-google-client-secret-here'):
        print()
        print("✅ OAuth configuration looks good!")
        return True
    else:
        print()
        print("❌ OAuth configuration needs to be set up.")
        print("Run this script to configure: python setup_oauth.py")
        return False

if __name__ == "__main__":
    if len(sys.argv) > 1 and sys.argv[1] == "check":
        check_setup()
    else:
        create_env_file() 